{"mappings":"ACKA,+CAA+C;AAC/C,kGAAkG;AAClG,iGAAiG;AACjG,kGAAkG;AAElG,eAAe,IACX,IAAM,EAAW,MAAM,MAPV,gDASb,OADW,MAAM,EAAS,IAAI,EAElC,CAqBA,eAAe,IACX,IAAM,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAK,SAAS,cAAc,CAAC,MAC7B,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAO,SAAS,cAAc,CAAC,QAE/B,EAAO,MAAM,IACb,EAAU,EAAK,IAAI,CAAC,AAAA,GAAK,EAAE,SAAS,GAAK,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAClE,CAAA,EAAK,SAAS,CAAG,EAAQ,MAAM,CAC/B,EAAG,SAAS,CAAG,EAAQ,SAAS,CAChC,EAAK,SAAS,CAAG,EAAQ,YAAY,CACrC,EAAK,SAAS,CAAG,EAAQ,eAAe,CACxC,EAAK,SAAS,CAAG,EAAQ,WAAW,CACpC,EAAK,SAAS,CAAG,EAAQ,mBAAmB,CAEhC,EAAQ,WAAW,CACnB,EAAQ,mBAAmB,AAC3C,C,2D;CArBA,AAjBA,iBACI,IAAM,EAAO,SAAS,aAAa,CAAC,iBAC9B,EAAO,MAAM,IAEb,EAAO,EAAK,GAAG,CAAC,AAAA,GACX,CAAC;;0BAEU,EAAE,EAAE,SAAS,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC;;QAE7C,CAAC,EACF,IAAI,CAAC,GAER,CAAA,EAAK,SAAS,CAAG,EACjB,IAAM,EAAM,SAAS,gBAAgB,CAAC,MACtC,EAAI,OAAO,CAAC,AAAA,GAAM,EAAG,gBAAgB,CAAC,QAAS,GACnD","sources":["<anon>","src/app.js"],"sourcesContent":["\"use strict\";\nlet $e73bf42412feb220$export$737fd423acd5c47 = 30;\nlet $e73bf42412feb220$export$99412de435521a6;\nconst $e73bf42412feb220$var$endpoint = \"https://danepubliczne.imgw.pl/api/data/synop\";\n// fetch(endpoint) // to fetch mi daje response\n//     .then(res => res.json()) // to nie wie jakiego typu to sa dane to moze byc img, html, music\n//                              // my mowimy ze to ma byc json, i ta funkcja znowu da nam promisa\n//     .then(data => console.log(...data)); // spreadoperator wyciaga po prostu z tablicy te itemy\nasync function $e73bf42412feb220$var$getData() {\n    const response = await fetch($e73bf42412feb220$var$endpoint);\n    let data = await response.json();\n    return data;\n}\nasync function $e73bf42412feb220$var$renderLi() {\n    const list = document.querySelector(\".station-list\");\n    const data = await $e73bf42412feb220$var$getData();\n    const html = data.map((s)=>{\n        return `\r\n            <li>\r\n                <span id=\"${s.id_stacji}\">${s.stacja}</span>\r\n            </li>\r\n        `;\n    }).join(\"\");\n    list.innerHTML = html;\n    const lis = document.querySelectorAll(\"li\");\n    lis.forEach((li)=>li.addEventListener(\"click\", $e73bf42412feb220$var$renderInfo));\n}\n$e73bf42412feb220$var$renderLi();\nasync function $e73bf42412feb220$var$renderInfo() {\n    const name = document.getElementById(\"name\");\n    const id = document.getElementById(\"id\");\n    const date = document.getElementById(\"date\");\n    const hour = document.getElementById(\"hour\");\n    const temp = document.getElementById(\"temp\");\n    const humi = document.getElementById(\"humi\");\n    const data = await $e73bf42412feb220$var$getData();\n    const element = data.find((e)=>e.id_stacji === this.children[0].id);\n    name.innerText = element.stacja;\n    id.innerText = element.id_stacji;\n    date.innerText = element.data_pomiaru;\n    hour.innerText = element.godzina_pomiaru;\n    temp.innerText = element.temperatura;\n    humi.innerText = element.wilgotnosc_wzgledna;\n    $e73bf42412feb220$export$737fd423acd5c47 = element.temperatura;\n    $e73bf42412feb220$export$99412de435521a6 = element.wilgotnosc_wzgledna;\n}\n\n\n//# sourceMappingURL=index.cb05b015.js.map\n","\"use strict\";\r\nexport let tempValue = 30;\r\nexport let humiValue;\r\n\r\nconst endpoint = \"https://danepubliczne.imgw.pl/api/data/synop\";\r\n// fetch(endpoint) // to fetch mi daje response\r\n//     .then(res => res.json()) // to nie wie jakiego typu to sa dane to moze byc img, html, music\r\n//                              // my mowimy ze to ma byc json, i ta funkcja znowu da nam promisa\r\n//     .then(data => console.log(...data)); // spreadoperator wyciaga po prostu z tablicy te itemy\r\n\r\nasync function getData() {\r\n    const response = await fetch(endpoint);\r\n    let data = await response.json();\r\n    return data;\r\n}\r\n\r\nasync function renderLi() {\r\n    const list = document.querySelector('.station-list');\r\n    const data = await getData();\r\n\r\n    const html = data.map(s => {\r\n        return `\r\n            <li>\r\n                <span id=\"${s.id_stacji}\">${s.stacja}</span>\r\n            </li>\r\n        `;\r\n    }).join('');\r\n\r\n    list.innerHTML = html;\r\n    const lis = document.querySelectorAll('li');\r\n    lis.forEach(li => li.addEventListener('click', renderInfo));\r\n}\r\n\r\nrenderLi();\r\n\r\nasync function renderInfo() {\r\n    const name = document.getElementById('name');\r\n    const id = document.getElementById('id');\r\n    const date = document.getElementById('date');\r\n    const hour = document.getElementById('hour');\r\n    const temp = document.getElementById('temp');\r\n    const humi = document.getElementById('humi');\r\n\r\n    const data = await getData();\r\n    const element = data.find(e => e.id_stacji === this.children[0].id)\r\n    name.innerText = element.stacja;\r\n    id.innerText = element.id_stacji;\r\n    date.innerText = element.data_pomiaru;\r\n    hour.innerText = element.godzina_pomiaru;\r\n    temp.innerText = element.temperatura;\r\n    humi.innerText = element.wilgotnosc_wzgledna;\r\n\r\n    tempValue = element.temperatura;\r\n    humiValue = element.wilgotnosc_wzgledna;\r\n}"],"names":["$e73bf42412feb220$var$getData","response","fetch","json","$e73bf42412feb220$var$renderInfo","name","document","getElementById","id","date","hour","temp","humi","data","element","find","e","id_stacji","children","innerText","stacja","data_pomiaru","godzina_pomiaru","temperatura","wilgotnosc_wzgledna","$e73bf42412feb220$var$renderLi","list","querySelector","html","map","s","join","innerHTML","lis","querySelectorAll","forEach","li","addEventListener"],"version":3,"file":"index.cb05b015.js.map"}